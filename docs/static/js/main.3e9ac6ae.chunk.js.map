{"version":3,"sources":["utils/flourTypes.ts","components/FlourSelection/index.tsx","utils/recipeCalculator.ts","components/BreadRecipeMaker/index.tsx","components/Recipe/index.tsx","components/StepByStep/index.tsx","components/WordPress/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["FlourType","FlourSelection","flourType","handleCheckboxChange","handleFlourTypeChange","isWholemeal","FormControl","component","FormLabel","Object","keys","map","flourKey","RadioGroup","aria-label","name","value","onChange","FormControlLabel","control","Radio","label","Divider","Checkbox","checked","recipeCalculator","finalWeight","flourWeight","recipesWholemeal","recipesWhite","recipeNumbers","flour","salt","sourdought","water","Math","round","sourdoughPer","waterPer","saltPer","Views","EMMER","RYE","KHORASAN","SPELT","WHEAT","Recipe","setFinalWeight","recipe","Input","type","event","parseInt","target","isNaN","endAdornment","InputAdornment","position","inputProps","FormHelperText","List","ListItem","ListItemIcon","ListItemText","primary","StepByStep","console","log","Timeline","align","TimelineItem","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","useStyles","makeStyles","theme","createStyles","extendedIcon","marginRight","spacing","fab","top","margin","right","backgroundColor","stepByStep","buttonText","id","recipeView","nextView","flourSelectionView","BreadRecipeMaker","classes","React","useState","currentView","setFlourType","setWholemeal","Fab","variant","size","className","onClick","activeComponent","Button","fullWidth","color","undefined","disabled","IFrame","title","src","frameBorder","flexGrow","textAlign","gotobreadMaker","createTheme","palette","main","secondary","App","isVisible","setNavigationVisibility","setTimeout","ThemeProvider","path","ScopedCssBaseline","AppBar","Toolbar","Typography","Container","maxWidth","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootElement","document","getElementById","hasChildNodes","hydrate","render"],"mappings":"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","file":"static/js/main.3e9ac6ae.chunk.js","sourcesContent":["export enum FlourType {\n    RYE = \"Rye\",\n    SPELT = \"Spelt\",\n    EMMER = \"Emmer\",\n    WHEAT = \"Wheat\",\n    KHORASAN = \"Khorasan\",\n}","import React, { FunctionComponent } from 'react'; // importing FunctionComponent\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Divider from '@material-ui/core/Divider';\nimport {FlourType} from '../../utils/flourTypes';\n\ntype Props = {\n    flourType: string,\n    isWholemeal: boolean,\n    handleFlourTypeChange: (event: React.ChangeEvent<HTMLInputElement>, value: string) => void,\n    handleCheckboxChange: (event: React.ChangeEvent<HTMLInputElement>, checked: boolean) => void\n}\n\n// we can use children even though we haven't defined them in our CardProps\nexport const FlourSelection: FunctionComponent<Props> = ({ flourType, handleCheckboxChange, handleFlourTypeChange, isWholemeal }) => (\n    <div>\n        <h2>We are going to make your bread recipe</h2>\n        <div>\n            <div>\n                <FormControl component=\"fieldset\">\n                    <FormLabel component=\"legend\">All that you have to do is just choose a flour:</FormLabel>\n                    {Object.keys(FlourType).map((flourKey) => (\n                        <RadioGroup key={flourKey} aria-label=\"gender\" name=\"gender1\" value={flourType} onChange={handleFlourTypeChange}>\n                            <FormControlLabel value={flourKey} control={<Radio />} label={FlourType[flourKey as keyof typeof FlourType]} />\n                        </RadioGroup>\n                    ))}\n                </FormControl>\n            </div>\n            <Divider />\n            <div>\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                            checked={isWholemeal}\n                            onChange={handleCheckboxChange}\n                        />\n                    }\n                    label=\"Is it wholemeal?\"\n                />\n            </div>\n        </div>\n    </div>\n)","import { FlourType } from './flourTypes';\n\nexport function recipeCalculator (flourType: FlourType, finalWeight: number, isWholemeal: boolean): Recipe {\n    if (isWholemeal) {\n        return flourWeight(recipesWholemeal[flourType], finalWeight)\n    }\n    return flourWeight(recipesWhite[flourType], finalWeight)\n}\n\nexport interface Recipe {\n    water: number,\n    sourdought: number,\n    flour: number,\n    salt: number\n}\n\nfunction flourWeight (recipeNumbers: RecipeCalculations, finalWeight: number): Recipe {\n    if (finalWeight === 0) {\n        return {\n            flour: 0,\n            salt: 0,\n            sourdought: 0,\n            water: 0\n        }\n    }\n    const flourWeight = Math.round(finalWeight / (1 + recipeNumbers.sourdoughPer + recipeNumbers.waterPer))\n    return {\n        flour: flourWeight,\n        salt: Math.round(flourWeight * recipeNumbers.saltPer),\n        sourdought: Math.round(flourWeight * recipeNumbers.sourdoughPer),\n        water: Math.round(flourWeight * recipeNumbers.waterPer)\n    }\n}\n\n\n\ninterface RecipeCalculations {\n    waterPer: number,\n    sourdoughPer: number,\n    saltPer: number,\n}\n\nconst recipesWholemeal = {\n    [FlourType.EMMER]: {\n        waterPer: 1,\n        sourdoughPer: 0.6,\n        saltPer: 0.03\n    },\n    [FlourType.RYE]: {\n        waterPer: 1,\n        sourdoughPer: 0.6,\n        saltPer: 0.03\n    },\n    [FlourType.KHORASAN]: {\n        waterPer: 0.85,\n        sourdoughPer: 0.2,\n        saltPer: 0.02\n    },\n    [FlourType.SPELT]: {\n        waterPer: 0.8,\n        sourdoughPer: 0.2,\n        saltPer: 0.02\n    },\n    [FlourType.WHEAT]: {\n        waterPer: 0.8,\n        sourdoughPer: 0.2,\n        saltPer: 0.02\n    },\n}\nconst recipesWhite = {\n    [FlourType.EMMER]: {\n        waterPer: 0.8,\n        sourdoughPer: 0.6,\n        saltPer: 0.03\n    },\n    [FlourType.RYE]: {\n        waterPer: 0.8,\n        sourdoughPer: 0.6,\n        saltPer: 0.03\n    },\n    [FlourType.KHORASAN]: {\n        waterPer: 0.65,\n        sourdoughPer: 0.2,\n        saltPer: 0.02\n    },\n    [FlourType.SPELT]: {\n        waterPer: 0.65,\n        sourdoughPer: 0.2,\n        saltPer: 0.02\n    },\n    [FlourType.WHEAT]: {\n        waterPer: 0.65,\n        sourdoughPer: 0.2,\n        saltPer: 0.02\n    },\n}\n\n\n","import React,{ FunctionComponent } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { FlourSelection } from '../FlourSelection';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport { Recipe } from '../Recipe';\nimport { StepByStep } from '../StepByStep';\nimport Fab from '@material-ui/core/Fab';\nimport ClearIcon from '@material-ui/icons/Clear';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        extendedIcon: {\n            marginRight: theme.spacing(1),\n        },\n        fab: {\n            position: 'absolute',\n            top: theme.spacing(1),\n            margin: theme.spacing(1),\n            right: theme.spacing(2),\n            backgroundColor: '#ff5722'\n        }\n    }),\n);\n\nenum Views {\n    FlourSelection,\n    Recipe,\n    StepByStep,\n}\n\ninterface View {\n    buttonText: string,\n    id: Views,\n    nextView?: View,\n}\n\nconst stepByStep = {\n    buttonText: 'Enjoy your fantastic bread!',\n    id: Views.StepByStep\n}\nconst recipeView = {\n    buttonText: 'Go to recipe instructions',\n    id: Views.Recipe,\n    nextView: stepByStep,\n}\nconst flourSelectionView = {\n    buttonText: 'Next Step',\n    id: Views.FlourSelection,\n    nextView: recipeView,\n}\n\n\nexport const BreadRecipeMaker: FunctionComponent = () => {\n    const classes = useStyles();\n    const [currentView, nextView] = React.useState<View>(flourSelectionView);\n    const [finalWeight, setFinalWeight] = React.useState<number>(0);\n    const [flourType, setFlourType] = React.useState<string>(\"\");\n    const [isWholemeal, setWholemeal] = React.useState(false);\n    const handleFlourTypeChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        let value = (event.target as HTMLInputElement).value\n        setFlourType(value)\n    };\n    const handleCheckboxChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setWholemeal(event.target.checked)\n    };\n    const goToNextView = () => {\n        if (currentView.nextView !== undefined) {\n            nextView(currentView.nextView)\n        }\n    };\n    const reset = () => {\n        nextView(flourSelectionView)\n        setFinalWeight(0)\n        setFlourType(\"\")\n        setWholemeal(false)\n    }\n\n    const activeComponent = (currentView: View) => {\n        switch (currentView.id) {\n            case Views.FlourSelection:\n                return <FlourSelection\n                    flourType={flourType}\n                    isWholemeal={isWholemeal}\n                    handleFlourTypeChange={handleFlourTypeChange}\n                    handleCheckboxChange={handleCheckboxChange}\n                />\n            case Views.Recipe:\n                return <Recipe\n                    finalWeight={finalWeight}\n                    setFinalWeight={setFinalWeight}\n                    isWholemeal={isWholemeal}\n                    flourType={flourType}\n                />\n            case Views.StepByStep:\n                return <StepByStep\n                    finalWeight={finalWeight}\n                    isWholemeal={isWholemeal}\n                    flourType={flourType} />\n        }\n    }\n\n    return <aside>\n        <Fab\n            variant=\"extended\"\n            size=\"small\"\n            aria-label=\"add\"\n            className={classes.fab}\n            onClick={() => reset()}\n        >\n            <ClearIcon className={classes.extendedIcon} />\n            Reset\n        </Fab>\n        {activeComponent(currentView)}\n        <Button variant=\"outlined\" fullWidth color=\"secondary\" onClick={() => goToNextView()} disabled={currentView.nextView === undefined || flourType === \"\"}>\n            {currentView.buttonText}\n        </Button>\n    </aside>\n}\n\n","import React, { FunctionComponent } from 'react';\nimport Input from '@material-ui/core/Input';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { recipeCalculator } from '../../utils/recipeCalculator';\nimport { FlourType } from '../../utils/flourTypes';\n\n\ntype Props = {\n  finalWeight: number,\n  flourType: string,\n  isWholemeal: boolean,\n  setFinalWeight: React.Dispatch<React.SetStateAction<number>>\n}\n\nexport const Recipe: FunctionComponent<Props> = ({ finalWeight, flourType, isWholemeal, setFinalWeight }) => {\n  let type = FlourType[flourType as keyof typeof FlourType]\n  const recipe = recipeCalculator(type, finalWeight, isWholemeal)\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    let finalWeight = parseInt(event.target.value)\n    if (isNaN(finalWeight)) {\n      finalWeight = 0;\n    }\n    setFinalWeight(finalWeight);\n  };\n  return <aside>\n    <h2>How much will your bread weight?</h2>\n    <FormControl>\n      <Input\n        type=\"number\"\n        value={finalWeight}\n        onChange={handleChange}\n        endAdornment={<InputAdornment position=\"end\">Grams</InputAdornment>}\n        inputProps={{\n          'aria-label': 'weight',\n        }}\n      />\n      <FormHelperText>Weight</FormHelperText>\n    </FormControl>\n    <Divider />\n    <h3>Recipe description</h3>\n    <List component=\"nav\" aria-label=\"secondary mailbox folders\">\n      <ListItem>\n        <ListItemIcon>\n          <RemoveIcon />\n        </ListItemIcon>\n        <ListItemText\n          primary={\"Flour: \" + recipe.flour + \" grams\"}\n        />\n      </ListItem>\n      <ListItem>\n        <ListItemIcon>\n          <RemoveIcon />\n        </ListItemIcon>\n        <ListItemText\n          primary={\"Sourdought: \" + recipe.sourdought + \" grams\"}\n        />\n      </ListItem>\n      <ListItem>\n        <ListItemIcon>\n          <RemoveIcon />\n        </ListItemIcon>\n        <ListItemText\n          primary={\"Water: \" + recipe.water + \" mL\"}\n        />\n      </ListItem>\n      <ListItem>\n        <ListItemIcon>\n          <RemoveIcon />\n        </ListItemIcon>\n        <ListItemText\n          primary={\"Salt: \" + recipe.salt + \" grams\"}\n        />\n      </ListItem>\n    </List>\n  </aside>\n}\n","import { FunctionComponent } from 'react'; // importing FunctionComponent\nimport Timeline from '@material-ui/lab/Timeline';\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\nimport TimelineContent from '@material-ui/lab/TimelineContent';\nimport TimelineDot from '@material-ui/lab/TimelineDot';\nimport { recipeCalculator } from '../../utils/recipeCalculator';\nimport { FlourType } from '../../utils/flourTypes';\n\ntype Props = {\n    finalWeight: number,\n    flourType: string,\n    isWholemeal: boolean,\n}\n\n// we can use children even though we haven't defined them in our CardProps\nexport const StepByStep: FunctionComponent<Props> = ({ finalWeight, flourType, isWholemeal }) => {\n    let type = FlourType[flourType as keyof typeof FlourType]\n    const recipe = recipeCalculator(type, finalWeight, isWholemeal)\n    console.log(recipe);\n    return <aside>\n        <Timeline align=\"alternate\">\n            <TimelineItem>\n                <TimelineSeparator>\n                    <TimelineDot />\n                    <TimelineConnector />\n                </TimelineSeparator>\n                <TimelineContent>Take the starter from the fridge</TimelineContent>\n            </TimelineItem>\n            <TimelineItem>\n                <TimelineSeparator>\n                    <TimelineDot />\n                    <TimelineConnector />\n                </TimelineSeparator>\n                <TimelineContent>Feed your started</TimelineContent>\n            </TimelineItem>\n            <TimelineItem>\n                <TimelineSeparator>\n                    <TimelineDot />\n                    <TimelineConnector />\n                </TimelineSeparator>\n                <TimelineContent>Mix water/started and then add the flour</TimelineContent>\n            </TimelineItem>\n            <TimelineItem>\n                <TimelineSeparator>\n                    <TimelineDot />\n                    <TimelineConnector />\n                </TimelineSeparator>\n                <TimelineContent>Knead the dough</TimelineContent>\n            </TimelineItem>\n            <TimelineItem>\n                <TimelineSeparator>\n                    <TimelineDot />\n                    <TimelineConnector />\n                </TimelineSeparator>\n                <TimelineContent>Keep the dough on a warm spot until it raises 1/3 of its initial size</TimelineContent>\n            </TimelineItem>\n            <TimelineItem>\n                <TimelineSeparator>\n                    <TimelineDot />\n                    <TimelineConnector />\n                </TimelineSeparator>\n                <TimelineContent>Shape the dough and put on the fridge</TimelineContent>\n            </TimelineItem>\n            <TimelineItem>\n                <TimelineSeparator>\n                    <TimelineDot />\n                    <TimelineConnector />\n                </TimelineSeparator>\n                <TimelineContent>Pre-heat the oven at max temperature</TimelineContent>\n            </TimelineItem>\n            <TimelineItem>\n                <TimelineSeparator>\n                    <TimelineDot />\n                    <TimelineConnector />\n                </TimelineSeparator>\n                <TimelineContent>Add the dough on the oven, drop the oven temperature to 220Cº and add some cool water on the bottom of the oven to create a humid enviorement</TimelineContent>\n            </TimelineItem>\n            <TimelineItem>\n                <TimelineSeparator>\n                    <TimelineDot />\n                    <TimelineConnector />\n                </TimelineSeparator>\n                <TimelineContent>Drop the oven temperature to 180Cº</TimelineContent>\n            </TimelineItem>\n            <TimelineItem>\n                <TimelineSeparator>\n                    <TimelineDot />\n                    <TimelineConnector />\n                </TimelineSeparator>\n                <TimelineContent>Take your yummy bread from the oven and wait until it cool down a bit before opening it</TimelineContent>\n            </TimelineItem>\n            <TimelineItem>\n                <TimelineSeparator>\n                    <TimelineDot />\n                </TimelineSeparator>\n                <TimelineContent>Enjoy!</TimelineContent>\n            </TimelineItem>\n        </Timeline>\n    </aside>\n}","export const IFrame = () =>  <iframe title=\"wordpress\" src=\"https://aunosecomollamarte.wordpress.com/\" frameBorder=\"0\"></iframe>","import React from 'react';\nimport ScopedCssBaseline from '@material-ui/core/ScopedCssBaseline';\nimport Container from '@material-ui/core/Container';\nimport { createTheme, createStyles, makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport { BreadRecipeMaker } from './components/BreadRecipeMaker';\nimport { IFrame } from './components/WordPress';\nimport Fab from '@material-ui/core/Fab';\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport { setTimeout } from 'timers';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    title: {\n      flexGrow: 1,\n      textAlign: 'center'\n    },\n    extendedIcon: {\n      marginRight: theme.spacing(1),\n    },\n    gotobreadMaker: {\n      position: 'absolute',\n      top: theme.spacing(1),\n      margin: theme.spacing(1),\n      right: theme.spacing(2)\n    }\n  }),\n);\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#1b3c4f',\n    },\n    secondary: {\n      main: '#21821d',\n    },\n  },\n});\n\nfunction App () {\n  const [isVisible, setNavigationVisibility] = React.useState(true);\n  const classes = useStyles();\n  setTimeout(() => {\n    setNavigationVisibility(false)\n  }, 5000)\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n        <Router>\n          <Switch>\n            <Route path=\"/bread-recipe-maker\">\n              <ScopedCssBaseline>\n                <AppBar position=\"static\">\n                  <Toolbar>\n                    <Typography variant=\"h6\" className={classes.title}>\n                      Bread Recipe Maker\n                    </Typography>\n                  </Toolbar>\n                </AppBar>\n                <Container maxWidth=\"xl\">\n                  <BreadRecipeMaker />\n                </Container>\n              </ScopedCssBaseline>\n            </Route>\n            <Route path=\"/\">\n              {\n                isVisible===true && <Fab\n                  variant=\"extended\"\n                  size=\"small\"\n                  aria-label=\"add\"\n                  color=\"secondary\"\n                  className={classes.gotobreadMaker}\n                  href=\"/bread-recipe-maker\"\n                >\n                  <NavigationIcon className={classes.extendedIcon} />\n                  Go To Bread Recipe Maker\n                </Fab>\n              }\n              <IFrame />\n            </Route>\n          </Switch>\n        </Router>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { hydrate, render } from \"react-dom\";\n\nconst rootElement = document.getElementById(\"root\");\nif (rootElement?.hasChildNodes()) {\n  hydrate(<App />, rootElement);\n} else {\n  render(<App />, rootElement);\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}